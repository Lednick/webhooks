<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter type="string" key="webhooks.queue">webhooks</parameter>
    </parameters>
    <services>
        <service id="message.handler" class="Webhook\Domain\Infrastructure\Handler"/>
        <service id="message.retry.handler" class="Webhook\Bundle\Service\RetryHandler">
            <argument type="service" id="amqp.client"/>
            <argument>%webhooks.queue%</argument>
        </service>

        <service id="strategy.factory" class="Webhook\Bundle\Service\StrategyFactory"/>
        <service id="request.content.validator" class="Webhook\Bundle\Service\Validation\RequestContentValidator"/>

        <service id="amqp.client" class="Bunny\Client">
            <argument type="collection">
                <argument type="string" key="host">%rabbitmq_host%</argument>
                <argument type="string" key="port">%rabbitmq_port%</argument>
            </argument>
            <call method="connect"/>
        </service>

        <service id="amqp.producer" class="Webhook\Bundle\Service\WebhookProducer">
            <argument type="service" id="amqp.client"/>
            <argument>%webhooks.queue%</argument>
        </service>

        <service id="message.repository" class="Webhook\Bundle\Repository\MessageRepository">
            <argument type="service" id="doctrine.orm.entity_manager"/>
        </service>

        <service id="webhooks.consumer" class="Webhook\Domain\Infrastructure\MessageConsumer">
            <argument type="service" id="message.handler"/>
            <argument type="service" id="message.retry.handler"/>
            <argument type="service" id="message.repository"/>
        </service>

        <service id="message.form.api.sent.event.listener"
                 class="Webhook\Bundle\EventListener\MessageFromApiSentEventListener">
            <argument type="service" id="strategy.factory"/>
            <argument type="service" id="message.repository"/>
            <tag name="kernel.event_subscriber" event="message.from.api.sent.event" method="handle"/>
        </service>
    </services>
</container>